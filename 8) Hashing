#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <openssl/sha.h>

#define HASH_FILE "user_db.txt"

// Function to compute SHA-256 hash
void compute_sha256(const char* input, char* output) {
	unsigned char hash[SHA256_DIGEST_LENGTH];
	SHA256((unsigned char*)input, strlen(input), hash);
	// Convert to hex string
	for (int i = 0; i < SHA256_DIGEST_LENGTH; i++)
	    sprintf(output + (i * 2), "%02x", hash[i]);
	output[64] = 0; // Null terminator
}

// Function to register a new user
void register_user() {
	char username[50], password[50], hash[65];
	printf("Register\nUsername: ");
	scanf("%s", username);

	printf("Password: ");
	scanf("%s", password);

	compute_sha256(password, hash);

	FILE* fp = fopen(HASH_FILE, "a");
	if (!fp) {
	    perror("Unable to open file");
	    return;
	}

	fprintf(fp, "%s %s\n", username, hash);
	fclose(fp);

	printf("User registered successfully!\n");
}

// Function to authenticate user
void login_user() {
	char username[50], password[50], hash[65], file_user[50], file_hash[65];
	int authenticated = 0;
	printf("Login\nUsername: ");
	scanf("%s", username);

	printf("Password: ");
	scanf("%s", password);

	compute_sha256(password, hash);

	FILE* fp = fopen(HASH_FILE, "r");
	if (!fp) {
	    perror("Unable to open file");
	    return;
	}

	while (fscanf(fp, "%s %s", file_user, file_hash) != EOF) {
	    if (strcmp(username, file_user) == 0) {
		if (strcmp(hash, file_hash) == 0) {
		    authenticated = 1;
		}
		break;
	    }
	}

	fclose(fp);

	if (authenticated)
	    printf("Login successful ✅\n");
	else
	    printf("Login failed ❌\n");
}

int main() {
	int choice;
	while (1) {
	    printf("\n=== Authentication Menu ===\n");
	    printf("1. Register\n2. Login\n3. Exit\nChoice: ");
	    scanf("%d", &choice);

	    switch (choice) {
		case 1: register_user(); break;
		case 2: login_user(); break;
		case 3: exit(0);
		default: printf("Invalid choice.\n");
	    }
	}

	return 0;
}
