#include <stdio.h>
#include <string.h>
#include <stdlib.h>

// Encrypt using Rail Fence Cipher
void encryptRailFence(char *text, int key, char *cipher) {
    int len = strlen(text);
    int row, col, dir_down;
    char rail[key][len];
    
    // Fill the rail matrix with '\n'
    for (row = 0; row < key; row++)
        for (col = 0; col < len; col++)
            rail[row][col] = '\n';
    
    row = 0;
    dir_down = 0;
    
    for (col = 0; col < len; col++) {
        // Change direction when we reach top or bottom rail
        if (row == 0 || row == key - 1)
            dir_down = !dir_down;
    
        rail[row][col] = text[col];
    
        row += dir_down ? 1 : -1;
    }
    
    // Construct cipher from the rail matrix
    int idx = 0;
    for (row = 0; row < key; row++)
        for (col = 0; col < len; col++)
            if (rail[row][col] != '\n')
                cipher[idx++] = rail[row][col];
    
    cipher[idx] = '\0';
}

// Decrypt using Rail Fence Cipher
void decryptRailFence(char *cipher, int key, char *result) {
    int len = strlen(cipher);
    char rail[key][len];
    
    // Initialize the rail matrix
    for (int i = 0; i < key; i++)
        for (int j = 0; j < len; j++)
            rail[i][j] = '\n';
    
    // Mark the places with '*'
    int row = 0, dir_down = 0;
    for (int col = 0; col < len; col++) {
        if (row == 0 || row == key - 1)
            dir_down = !dir_down;
        rail[row][col] = '*';
        row += dir_down ? 1 : -1;
    }
    
    // Fill the rail matrix with the cipher text
    int idx = 0;
    for (int i = 0; i < key; i++)
        for (int j = 0; j < len; j++)
            if (rail[i][j] == '*' && idx < len)
                rail[i][j] = cipher[idx++];
    
    // Read the matrix in zigzag manner to get original text
    row = 0;
    dir_down = 0;
    for (int col = 0; col < len; col++) {
        if (row == 0 || row == key - 1)
            dir_down = !dir_down;
        result[col] = rail[row][col];
        row += dir_down ? 1 : -1;
    }
    result[len] = '\0';
}

int main() {
    char text[1000], encrypted[1000], decrypted[1000];
    int key;
    
    printf("Enter text to encrypt: ");
    fgets(text, sizeof(text), stdin);
    text[strcspn(text, "\n")] = '\0'; // remove newline
    
    printf("Enter number of rails (key): ");
    scanf("%d", &key);
    
    encryptRailFence(text, key, encrypted);
    printf("Encrypted Text: %s\n", encrypted);
    
    decryptRailFence(encrypted, key, decrypted);
    printf("Decrypted Text: %s\n", decrypted);
    
    return 0;
}
